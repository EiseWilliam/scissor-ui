/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardLayoutImport } from './routes/dashboard/_layout'
import { Route as DashboardLayoutIndexImport } from './routes/dashboard/_layout.index'
import { Route as DashboardLayoutUrlsImport } from './routes/dashboard/_layout.urls'
import { Route as DashboardLayoutQrsImport } from './routes/dashboard/_layout.qrs'
import { Route as DashboardLayoutNewImport } from './routes/dashboard/_layout.new'
import { Route as DashboardLayoutShortUrlIndexImport } from './routes/dashboard/_layout.$shortUrl/index'
import { Route as DashboardLayoutShortUrlAnalyticsImport } from './routes/dashboard/_layout.$shortUrl/analytics'

// Create Virtual Routes

const DashboardImport = createFileRoute('/dashboard')()

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const RegisterRoute = RegisterImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardLayoutRoute = DashboardLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardLayoutIndexRoute = DashboardLayoutIndexImport.update({
  path: '/',
  getParentRoute: () => DashboardLayoutRoute,
} as any)

const DashboardLayoutUrlsRoute = DashboardLayoutUrlsImport.update({
  path: '/urls',
  getParentRoute: () => DashboardLayoutRoute,
} as any)

const DashboardLayoutQrsRoute = DashboardLayoutQrsImport.update({
  path: '/qrs',
  getParentRoute: () => DashboardLayoutRoute,
} as any)

const DashboardLayoutNewRoute = DashboardLayoutNewImport.update({
  path: '/new',
  getParentRoute: () => DashboardLayoutRoute,
} as any)

const DashboardLayoutShortUrlIndexRoute =
  DashboardLayoutShortUrlIndexImport.update({
    path: '/$shortUrl/',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)

const DashboardLayoutShortUrlAnalyticsRoute =
  DashboardLayoutShortUrlAnalyticsImport.update({
    path: '/$shortUrl/analytics',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/_layout': {
      preLoaderRoute: typeof DashboardLayoutImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/_layout/new': {
      preLoaderRoute: typeof DashboardLayoutNewImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/dashboard/_layout/qrs': {
      preLoaderRoute: typeof DashboardLayoutQrsImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/dashboard/_layout/urls': {
      preLoaderRoute: typeof DashboardLayoutUrlsImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/dashboard/_layout/': {
      preLoaderRoute: typeof DashboardLayoutIndexImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/dashboard/_layout/$shortUrl/analytics': {
      preLoaderRoute: typeof DashboardLayoutShortUrlAnalyticsImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/dashboard/_layout/$shortUrl/': {
      preLoaderRoute: typeof DashboardLayoutShortUrlIndexImport
      parentRoute: typeof DashboardLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  LoginRoute,
  RegisterRoute,
  DashboardRoute.addChildren([
    DashboardLayoutRoute.addChildren([
      DashboardLayoutNewRoute,
      DashboardLayoutQrsRoute,
      DashboardLayoutUrlsRoute,
      DashboardLayoutIndexRoute,
      DashboardLayoutShortUrlAnalyticsRoute,
      DashboardLayoutShortUrlIndexRoute,
    ]),
  ]),
])

/* prettier-ignore-end */
